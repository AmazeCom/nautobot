# Generated by Django 3.2.16 on 2022-12-09 17:30

import django.db.models.deletion
from django.db import migrations, models


def migrate_contenttypes(apps, schema_editor):
    ContentType = apps.get_model("contenttypes", "ContentType")

    dynamicgroup_ct = ContentType.objects.get_by_natural_key("extras", "dynamicgroup")
    dynamicgroup_ct.app_label = "core"
    dynamicgroup_ct.save()

    dynamicgroupmembership_ct = ContentType.objects.get_by_natural_key("extras", "dynamicgroupmembership")
    dynamicgroupmembership_ct.app_label = "core"
    dynamicgroupmembership_ct.save()


def reverse_migrate_contenttypes(apps, schema_editor):
    ContentType = apps.get_model("contenttypes", "ContentType")

    dynamicgroup_ct = ContentType.objects.get_by_natural_key("core", "dynamicgroup")
    dynamicgroup_ct.app_label = "extras"
    dynamicgroup_ct.save()

    dynamicgroupmembership_ct = ContentType.objects.get_by_natural_key("core", "dynamicgroupmembership")
    dynamicgroupmembership_ct.app_label = "extras"
    dynamicgroupmembership_ct.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
        ('extras', '0053_relationship_required_on'),
    ]

    database_operations = [
        migrations.AlterModelTable(
            name='DynamicGroup',
            table='core_dynamicgroup',
        ),
        migrations.AlterModelTable(
            name='DynamicGroupMembership',
            table='core_dynamicgroupmembership',
        ),
        migrations.AlterField(
            model_name='dynamicgroupmembership',
            name='group',
            field=models.ForeignKey(
                on_delete=models.CASCADE,
                related_name='+',
                to='core.dynamicgroup',
            ),
        ),
        migrations.AlterField(
            model_name='dynamicgroupmembership',
            name='parent_group',
            field=models.ForeignKey(
                on_delete=models.CASCADE,
                related_name='dynamic_group_memberships',
                to='core.dynamicgroup',
            ),
        ),
        migrations.RunPython(migrate_contenttypes, reverse_migrate_contenttypes),
    ]

    state_operations = [
        migrations.DeleteModel(
            name='DynamicGroup',
        ),
        migrations.DeleteModel(
            name='DynamicGroupMembership',
        ),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=database_operations,
            state_operations=state_operations,
        ),
    ]
